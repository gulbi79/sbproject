Object principal = SecurityContextHolder.getContext().getAuthentication().getPrincipal(); 
UserVo userVo = (UserVo)principal; 


async function gfn_service(pConfigs) {
	let serviceConfig = {
		url: '',
		method: 'post', 
		headers: { "Content-Type": "application/json", "REQ_SQL": pConfigs.reqSql ? "Y" : "N" },
	    body: null,
	    successCallback: null,
	    errorCallback: null
	};
	
	serviceConfig = {...serviceConfig, ...pConfigs};
	if (serviceConfig.headers.REQ_SQL === "Y") {
		serviceConfig.successCallback = function(res) {
			const data = res.data;
			let strSql = "";
			for (key in data) {
				//console.log("["+key+"]: "+data[key]);
				strSql += data[key] + "\n\n";
			}
			gfn_alert({title: "Excute SQL", width: 800, closeButton: true, content: "<div style='overflow:auto;height:500px;white-space:pre;'>"+strSql+"</div>"});
		}
	}
	
	// loading bar start
	const activity = Metro.activity.open({
        type: 'ring',
        style: 'color',
        //overlayClickClose: true
    });
	
	//server api 요청
	fetch(serviceConfig.url, {
	    method: serviceConfig.method, 
	    headers: serviceConfig.headers,
	    body: serviceConfig.body
	})
    .then(res => {
		// loading bar end
		Metro.activity.close(activity);
		
		if (!res.ok) throw res;
		
		return res.json(); //응답 결과를 json으로 파싱
	})
    .then(serviceConfig.successCallback)
    .catch(err => {
		err.text().then(async function(msg) {
			await gfn_alertSync({title: "Error", content: JSON.parse(msg).message});
		})
    });
}

//조회
async function fn_apply(sql = false) {
    //필터폼 데이터 생성
    let filterObj = gfn_getFormObj($('.filterForm'));
    filterObj = {...filterObj, ...gfn_getChkTree()}; //체크트리 파라미터 셋
    
    //유효성 검증
    if (!fn_validation()) return false;
	
	//server api 요청
	const pConfigs = {
		url: '/admin/codelist',
		reqSql : sql,
	    body: JSON.stringify(filterObj),
	    successCallback: function(res) {
			try {
				//데이터 초기화 및 그리드 데이터 생성
	            provider.clearRows();
	            grid.cancel();
	            provider.setRows(res.data);
	            
	            provider.clearSavePoints();
				provider.savePoint(); //초기화 포인트 저장
			} catch(e) {
				console.log(e);
			}
	    }
	}; 
	gfn_service(pConfigs);
}